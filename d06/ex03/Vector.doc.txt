<- Vector ----------------------------------------------------------------------
La classe Vector permet de representer un vecteur dans l'espace.

Une instance est construite en fournissant au minimum le vertex de destination de destination.
Si le le vertex de d'origine n'est pas fourni, celui-ci vaudra l'origine par defaut.
new Vector( array ( 'dest' => (un vertex) ) par exemple.

La clase Vector possede 4 attributs prives: les magnitudes en x, y, et z et la coordonee w.
la classe Vector fournit des accesseurs en lecture seule pour ces quatres
attributs ainsi que les methodes publiques suivantes:

magnitude(): retourne la magnitude (norme) du vecteur.
normalize(): retourne le vecteur normalise de l'instance courante.
add(): retourne le vecteur somme de l'instance courante et de l'instance passee en parametre.
sub(): retourne le vecteur difference de l'instance courante et de l'instance passee en parametre.
opposite(): retourne le vecteur oppose de l'instance courante.
scalarProduct(): retourne le vecteur resultant du produit scalaire de l'instance courante et du coefficiant passee en parametre.
dotProduct(): retourne le vecteur resultant du produit scalaire de l'instance courante et de l'instance passee en parametre.
cos(): retourne le cosinus de l'angle entre l'instance courante et l'instance passee en parametre.
crossProduct(): retourne le vecteur resultant du produit en croix de l'instance courante et de l'instance passee en parametre.

---------------------------------------------------------------------- Vector ->
